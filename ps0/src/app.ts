//
//   MODULE: app 
//   Copyright (c) 2014 Eastside Web (http://eastsideweb.github.io/)
//
//   FILE: app.ts
//   DESCRIPTION: File containing the entry point code used by the server
//   to create and application instance
//
//   HISTORY:
//     Date            By  Comment
//     2014 May 10th    NSA  Created
//
//
// This creates a new application instance
///<reference path="./inc/ext/node.d.ts"/>
///<reference path="./inc/ext/express.d.ts"/>

"use strict";

import express = require('express');
import path = require('path');
import config = require('./lib/config');
global.config = config('config');
var app = express();
var routes = require('./routes')(app);

// view engine setup
// Commented as this is present in the auto generated view
// Will uncomment when the view is and its flow is finalized
//app.set('views', path.join(__dirname, 'views'));
//app.set('view engine', 'jade');

app.set('title', 'Puzzle Orchestration');

app.use(express.static(path.join(__dirname, 'public')));

/// catch 404 and forwarding to error handler
app.use(function(req, res, next) {
    var err = new Error('Not Found');
    //err.status = 404;
    next(err);
});

/// error handlers
/// TODO: To complete the flow of error handling
// below are autogenerated error handlers 
// development error handler
// will print stacktrace
if (app.get('env') === 'development') {
    app.use(function (err, req, res, next) {
        console.log('Error: ' + err.message);
        res.status(err.status || 500);
        res.render('error', {
            message: err.message,
            error: err
        });
    });
}

// production error handler
// no stacktraces leaked to user
app.use(function(err, req, res, next) {
    res.status(err.status || 500);
    res.render('error', {
        message: err.message,
        error: {}
    });
});

module.exports = app;